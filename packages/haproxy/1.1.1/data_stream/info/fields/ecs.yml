- description: |-
    These fields contain information about a process.
    These fields can help you correlate metrics information with a process id/name from a log message.  The `process.pid` often stays in the metric itself and is copied to the global field for correlation.
  fields:
    - description: |-
        Array of process arguments, starting with the absolute path to the executable.
        May be filtered to protect sensitive information.
      name: args
      type: keyword
    - description: |-
        Length of the process.args array.
        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.
      name: args_count
      type: long
    - description: |-
        The hashing algorithm used to sign the process.
        This value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.
      name: code_signature.digest_algorithm
      type: keyword
    - description: Boolean to capture if a signature is present.
      name: code_signature.exists
      type: boolean
    - description: |-
        The identifier used to sign the process.
        This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.
      name: code_signature.signing_id
      type: keyword
    - description: |-
        Additional information about the certificate status.
        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
      name: code_signature.status
      type: keyword
    - description: Subject name of the code signer
      name: code_signature.subject_name
      type: keyword
    - description: |-
        The team identifier used to sign the process.
        This is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.
      name: code_signature.team_id
      type: keyword
    - description: Date and time when the code signature was generated and signed.
      name: code_signature.timestamp
      type: date
    - description: |-
        Stores the trust status of the certificate chain.
        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
      name: code_signature.trusted
      type: boolean
    - description: |-
        Boolean to capture if the digital signature is verified against the binary content.
        Leave unpopulated if a certificate was unchecked.
      name: code_signature.valid
      type: boolean
    - description: |-
        Full command line that started the process, including the absolute path to the executable, and all arguments.
        Some arguments may be filtered to protect sensitive information.
      multi_fields:
        - name: text
          type: match_only_text
      name: command_line
      type: wildcard
    - description: Machine architecture of the ELF file.
      name: elf.architecture
      type: keyword
    - description: Byte sequence of ELF file.
      name: elf.byte_order
      type: keyword
    - description: CPU type of the ELF file.
      name: elf.cpu_type
      type: keyword
    - description: Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.
      name: elf.creation_date
      type: date
    - description: List of exported element names and types.
      name: elf.exports
      type: flattened
    - description: Version of the ELF Application Binary Interface (ABI).
      name: elf.header.abi_version
      type: keyword
    - description: Header class of the ELF file.
      name: elf.header.class
      type: keyword
    - description: Data table of the ELF header.
      name: elf.header.data
      type: keyword
    - description: Header entrypoint of the ELF file.
      name: elf.header.entrypoint
      type: long
    - description: '"0x1" for original ELF files.'
      name: elf.header.object_version
      type: keyword
    - description: Application Binary Interface (ABI) of the Linux OS.
      name: elf.header.os_abi
      type: keyword
    - description: Header type of the ELF file.
      name: elf.header.type
      type: keyword
    - description: Version of the ELF header.
      name: elf.header.version
      type: keyword
    - description: List of imported element names and types.
      name: elf.imports
      type: flattened
    - description: |-
        An array containing an object for each section of the ELF file.
        The keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.
      name: elf.sections
      type: nested
    - description: Chi-square probability distribution of the section.
      name: elf.sections.chi2
      type: long
    - description: Shannon entropy calculation from the section.
      name: elf.sections.entropy
      type: long
    - description: ELF Section List flags.
      name: elf.sections.flags
      type: keyword
    - description: ELF Section List name.
      name: elf.sections.name
      type: keyword
    - description: ELF Section List offset.
      name: elf.sections.physical_offset
      type: keyword
    - description: ELF Section List physical size.
      name: elf.sections.physical_size
      type: long
    - description: ELF Section List type.
      name: elf.sections.type
      type: keyword
    - description: ELF Section List virtual address.
      name: elf.sections.virtual_address
      type: long
    - description: ELF Section List virtual size.
      name: elf.sections.virtual_size
      type: long
    - description: |-
        An array containing an object for each segment of the ELF file.
        The keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.
      name: elf.segments
      type: nested
    - description: ELF object segment sections.
      name: elf.segments.sections
      type: keyword
    - description: ELF object segment type.
      name: elf.segments.type
      type: keyword
    - description: List of shared libraries used by this ELF object.
      name: elf.shared_libraries
      type: keyword
    - description: telfhash symbol hash for ELF file.
      name: elf.telfhash
      type: keyword
    - description: The time the process ended.
      name: end
      type: date
    - description: |-
        Unique identifier for the process.
        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
      name: entity_id
      type: keyword
    - description: Absolute path to the process executable.
      multi_fields:
        - name: text
          type: match_only_text
      name: executable
      type: keyword
    - description: |-
        The exit code of the process, if this is a termination event.
        The field should be absent if there is no exit code for the event (e.g. process start).
      name: exit_code
      type: long
    - description: MD5 hash.
      name: hash.md5
      type: keyword
    - description: SHA1 hash.
      name: hash.sha1
      type: keyword
    - description: SHA256 hash.
      name: hash.sha256
      type: keyword
    - description: SHA512 hash.
      name: hash.sha512
      type: keyword
    - description: SSDEEP hash.
      name: hash.ssdeep
      type: keyword
    - description: |-
        Process name.
        Sometimes called program name or similar.
      multi_fields:
        - name: text
          type: match_only_text
      name: name
      type: keyword
    - description: |-
        Array of process arguments, starting with the absolute path to the executable.
        May be filtered to protect sensitive information.
      name: parent.args
      type: keyword
    - description: |-
        Length of the process.args array.
        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.
      name: parent.args_count
      type: long
    - description: |-
        The hashing algorithm used to sign the process.
        This value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.
      name: parent.code_signature.digest_algorithm
      type: keyword
    - description: Boolean to capture if a signature is present.
      name: parent.code_signature.exists
      type: boolean
    - description: |-
        The identifier used to sign the process.
        This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.
      name: parent.code_signature.signing_id
      type: keyword
    - description: |-
        Additional information about the certificate status.
        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
      name: parent.code_signature.status
      type: keyword
    - description: Subject name of the code signer
      name: parent.code_signature.subject_name
      type: keyword
    - description: |-
        The team identifier used to sign the process.
        This is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.
      name: parent.code_signature.team_id
      type: keyword
    - description: Date and time when the code signature was generated and signed.
      name: parent.code_signature.timestamp
      type: date
    - description: |-
        Stores the trust status of the certificate chain.
        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
      name: parent.code_signature.trusted
      type: boolean
    - description: |-
        Boolean to capture if the digital signature is verified against the binary content.
        Leave unpopulated if a certificate was unchecked.
      name: parent.code_signature.valid
      type: boolean
    - description: |-
        Full command line that started the process, including the absolute path to the executable, and all arguments.
        Some arguments may be filtered to protect sensitive information.
      multi_fields:
        - name: text
          type: match_only_text
      name: parent.command_line
      type: wildcard
    - description: Machine architecture of the ELF file.
      name: parent.elf.architecture
      type: keyword
    - description: Byte sequence of ELF file.
      name: parent.elf.byte_order
      type: keyword
    - description: CPU type of the ELF file.
      name: parent.elf.cpu_type
      type: keyword
    - description: Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.
      name: parent.elf.creation_date
      type: date
    - description: List of exported element names and types.
      name: parent.elf.exports
      type: flattened
    - description: Version of the ELF Application Binary Interface (ABI).
      name: parent.elf.header.abi_version
      type: keyword
    - description: Header class of the ELF file.
      name: parent.elf.header.class
      type: keyword
    - description: Data table of the ELF header.
      name: parent.elf.header.data
      type: keyword
    - description: Header entrypoint of the ELF file.
      name: parent.elf.header.entrypoint
      type: long
    - description: '"0x1" for original ELF files.'
      name: parent.elf.header.object_version
      type: keyword
    - description: Application Binary Interface (ABI) of the Linux OS.
      name: parent.elf.header.os_abi
      type: keyword
    - description: Header type of the ELF file.
      name: parent.elf.header.type
      type: keyword
    - description: Version of the ELF header.
      name: parent.elf.header.version
      type: keyword
    - description: List of imported element names and types.
      name: parent.elf.imports
      type: flattened
    - description: |-
        An array containing an object for each section of the ELF file.
        The keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.
      name: parent.elf.sections
      type: nested
    - description: Chi-square probability distribution of the section.
      name: parent.elf.sections.chi2
      type: long
    - description: Shannon entropy calculation from the section.
      name: parent.elf.sections.entropy
      type: long
    - description: ELF Section List flags.
      name: parent.elf.sections.flags
      type: keyword
    - description: ELF Section List name.
      name: parent.elf.sections.name
      type: keyword
    - description: ELF Section List offset.
      name: parent.elf.sections.physical_offset
      type: keyword
    - description: ELF Section List physical size.
      name: parent.elf.sections.physical_size
      type: long
    - description: ELF Section List type.
      name: parent.elf.sections.type
      type: keyword
    - description: ELF Section List virtual address.
      name: parent.elf.sections.virtual_address
      type: long
    - description: ELF Section List virtual size.
      name: parent.elf.sections.virtual_size
      type: long
    - description: |-
        An array containing an object for each segment of the ELF file.
        The keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.
      name: parent.elf.segments
      type: nested
    - description: ELF object segment sections.
      name: parent.elf.segments.sections
      type: keyword
    - description: ELF object segment type.
      name: parent.elf.segments.type
      type: keyword
    - description: List of shared libraries used by this ELF object.
      name: parent.elf.shared_libraries
      type: keyword
    - description: telfhash symbol hash for ELF file.
      name: parent.elf.telfhash
      type: keyword
    - description: The time the process ended.
      name: parent.end
      type: date
    - description: |-
        Unique identifier for the process.
        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
      name: parent.entity_id
      type: keyword
    - description: Absolute path to the process executable.
      multi_fields:
        - name: text
          type: match_only_text
      name: parent.executable
      type: keyword
    - description: |-
        The exit code of the process, if this is a termination event.
        The field should be absent if there is no exit code for the event (e.g. process start).
      name: parent.exit_code
      type: long
    - description: MD5 hash.
      name: parent.hash.md5
      type: keyword
    - description: SHA1 hash.
      name: parent.hash.sha1
      type: keyword
    - description: SHA256 hash.
      name: parent.hash.sha256
      type: keyword
    - description: SHA512 hash.
      name: parent.hash.sha512
      type: keyword
    - description: SSDEEP hash.
      name: parent.hash.ssdeep
      type: keyword
    - description: |-
        Process name.
        Sometimes called program name or similar.
      multi_fields:
        - name: text
          type: match_only_text
      name: parent.name
      type: keyword
    - description: CPU architecture target for the file.
      name: parent.pe.architecture
      type: keyword
    - description: Internal company name of the file, provided at compile-time.
      name: parent.pe.company
      type: keyword
    - description: Internal description of the file, provided at compile-time.
      name: parent.pe.description
      type: keyword
    - description: Internal version of the file, provided at compile-time.
      name: parent.pe.file_version
      type: keyword
    - description: |-
        A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.
        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
      name: parent.pe.imphash
      type: keyword
    - description: Internal name of the file, provided at compile-time.
      name: parent.pe.original_file_name
      type: keyword
    - description: Internal product name of the file, provided at compile-time.
      name: parent.pe.product
      type: keyword
    - description: Identifier of the group of processes the process belongs to.
      name: parent.pgid
      type: long
    - description: Process id.
      name: parent.pid
      type: long
    - description: The time the process started.
      name: parent.start
      type: date
    - description: Thread ID.
      name: parent.thread.id
      type: long
    - description: Thread name.
      name: parent.thread.name
      type: keyword
    - description: |-
        Process title.
        The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.
      multi_fields:
        - name: text
          type: match_only_text
      name: parent.title
      type: keyword
    - description: Seconds the process has been up.
      name: parent.uptime
      type: long
    - description: The working directory of the process.
      multi_fields:
        - name: text
          type: match_only_text
      name: parent.working_directory
      type: keyword
    - description: CPU architecture target for the file.
      name: pe.architecture
      type: keyword
    - description: Internal company name of the file, provided at compile-time.
      name: pe.company
      type: keyword
    - description: Internal description of the file, provided at compile-time.
      name: pe.description
      type: keyword
    - description: Internal version of the file, provided at compile-time.
      name: pe.file_version
      type: keyword
    - description: |-
        A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.
        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
      name: pe.imphash
      type: keyword
    - description: Internal name of the file, provided at compile-time.
      name: pe.original_file_name
      type: keyword
    - description: Internal product name of the file, provided at compile-time.
      name: pe.product
      type: keyword
    - description: Identifier of the group of processes the process belongs to.
      name: pgid
      type: long
    - description: Process id.
      name: pid
      type: long
    - description: The time the process started.
      name: start
      type: date
    - description: Thread ID.
      name: thread.id
      type: long
    - description: Thread name.
      name: thread.name
      type: keyword
    - description: |-
        Process title.
        The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.
      multi_fields:
        - name: text
          type: match_only_text
      name: title
      type: keyword
    - description: Seconds the process has been up.
      name: uptime
      type: long
    - description: The working directory of the process.
      multi_fields:
        - name: text
          type: match_only_text
      name: working_directory
      type: keyword
  name: process
  type: group
- description: Process id.
  name: process.pid
  type: long
- description: |-
    Address where data about this service was collected from.
    This should be a URI, network address (ipv4:port or [ipv6]:port) or a resource path (sockets).
  name: service.address
  type: keyword
- description: |-
    The type of the service data is collected from.
    The type can be used to group and correlate logs and metrics from one service type.
    Example: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`.
  name: service.type
  type: keyword
