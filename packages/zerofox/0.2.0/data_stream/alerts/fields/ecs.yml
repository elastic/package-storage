- description: |-
    ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
    When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
  name: ecs.version
  type: keyword
- description: |-
    Timestamp when an event arrived in the central data store.
    This is different from `@timestamp`, which is when the event originally occurred.  It's also different from `event.created`, which is meant to capture the first time an agent saw the event.
    In normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.
  name: event.ingested
  type: date
- description: |-
    Raw text message of entire event. Used to demonstrate log integrity or where the full log message (before splitting it up in multiple parts) may be required, e.g. for reindex.
    This field is not indexed and doc_values are disabled. It cannot be searched, but it can be retrieved from `_source`. If users wish to override this and index this field, please see `Field data types` in the `Elasticsearch Reference`.
  name: event.original
  type: keyword
- description: |-
    event.created contains the date/time when the event was first read by an agent, or by your pipeline.
    This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.
    In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.
    In case the two timestamps are identical, @timestamp should be used.
  name: event.created
  type: date
- description: Unique ID to describe the event.
  name: event.id
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.
    `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
    The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.
  name: event.kind
  type: keyword
- description: |-
    The numeric severity of the event according to your event source.
    What the different severity values mean can be different between sources and use cases. It's up to the implementer to make sure severities are consistent across events from the same source.
    The Syslog severity belongs in `log.syslog.severity.code`. `event.severity` is meant to represent the severity according to the event source (e.g. firewall, IDS). If the event source does not publish its own severity, you may optionally copy the `log.syslog.severity.code` to `event.severity`.
  name: event.severity
  type: long
- description: |-
    URL linking to an external system to continue investigation of this event.
    This URL links to another system where in-depth investigation of the specific occurrence of this event can take place. Alert events, indicated by `event.kind:alert`, are a common use case for this field.
  name: event.url
  type: keyword
- description: A rule ID that is unique within the scope of an agent, observer, or other entity using the rule for detection of this event.
  name: rule.id
  type: keyword
- description: The name of the rule or signature generating the event.
  name: rule.name
  type: keyword
- description: Name of the ruleset, policy, group, or parent category in which the rule used to generate this event is a member.
  name: rule.ruleset
  type: keyword
- description: A categorization value keyword used by the entity using the rule for detection of this event.
  name: rule.category
  type: keyword
- description: Short name or login of the user.
  name: user.name
  type: keyword
- description: Array of user roles at the time of the event.
  name: user.roles
  type: keyword
- description: Name given by operators to sections of their network.
  name: network.name
  type: keyword
- description: Error message.
  name: error.message
  type: text
