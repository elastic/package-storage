- description: City name.
  name: client.geo.city_name
  type: keyword
- description: Country name.
  name: client.geo.country_name
  type: keyword
- description: Country ISO code.
  name: client.geo.country_iso_code
  type: keyword
- description: Name of the continent.
  name: client.geo.continent_name
  type: keyword
- description: Country ISO code.
  name: client.geo.country_iso_code
  type: keyword
- description: Region ISO code.
  name: client.geo.region_iso_code
  type: keyword
- description: Longitude and latitude.
  name: client.geo.location
  type: geo_point
- description: Region name.
  name: client.geo.region_name
  type: keyword
- description: IP address of the client (IPv4 or IPv6).
  name: client.ip
  type: ip
- description: Port of the client.
  name: client.port
  type: long
- description: |-
    ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
    When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
  name: ecs.version
  type: keyword
- description: Size in bytes of the request body.
  name: http.request.body.bytes
  type: long
- description: |-
    HTTP request method.
    The value should retain its casing from the original event. For example, `GET`, `get`, and `GeT` are all considered valid values for this field.
  name: http.request.method
  type: keyword
- description: Size in bytes of the response body.
  name: http.response.body.bytes
  type: long
- description: HTTP response status code.
  name: http.response.status_code
  type: long
- description: Organization name.
  multi_fields:
    - name: text
      type: match_only_text
  name: organization.name
  type: keyword
- description: |-
    Some event server addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
    Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
  name: server.address
  type: keyword
- description: Port of the server.
  name: server.port
  type: long
- description: All of the IPs seen on your event.
  name: related.ip
  normalize:
    - array
  type: ip
- description: All the user names or other user identifiers seen on the event.
  name: related.user
  normalize:
    - array
  type: keyword
- description: List of keywords used to tag each event.
  name: tags
  normalize:
    - array
  type: keyword
- description: |-
    Domain of the url, such as "www.elastic.co".
    In some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.
    If the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field.
  name: url.domain
  type: keyword
- description: |-
    The field contains the file extension from the original request url, excluding the leading dot.
    The file extension is only set if it exists, as not every url has a file extension.
    The leading period must not be included. For example, the value must be "png", not ".png".
    Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").
  name: url.extension
  type: keyword
- description: |-
    Unmodified original url as seen in the event source.
    Note that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.
    This field is meant to represent the URL as it was observed, complete or not.
  multi_fields:
    - name: text
      type: match_only_text
  name: url.original
  type: wildcard
- description: Path of the request, such as "/search".
  name: url.path
  type: wildcard
- description: |-
    Scheme of the request, such as "https".
    Note: The `:` is not part of the scheme.
  name: url.scheme
  type: keyword
- description: Short name or login of the user.
  multi_fields:
    - name: text
      type: match_only_text
  name: user.name
  type: keyword
- description: Name of the device.
  name: user_agent.device.name
  type: keyword
- description: Name of the user agent.
  name: user_agent.name
  type: keyword
- description: Unparsed user_agent string.
  multi_fields:
    - name: text
      type: match_only_text
  name: user_agent.original
  type: keyword
- description: Operating system name, including the version or code name.
  multi_fields:
    - name: text
      type: match_only_text
  name: user_agent.os.full
  type: keyword
- description: Operating system name, without the version.
  multi_fields:
    - name: text
      type: match_only_text
  name: user_agent.os.name
  type: keyword
- description: Operating system version as a raw string.
  name: user_agent.os.version
  type: keyword
- description: Version of the user agent.
  name: user_agent.version
  type: keyword
