- description: |-
    ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
    When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
  name: ecs.version
  type: keyword
- description: |-
    Translated IP of source based NAT sessions (e.g. internal client to internet).
    Typically connections traversing load balancers, firewalls, or routers.
  name: client.nat.ip
  type: ip
- description: |-
    This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.
    `event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.
    This field is an array. This will allow proper categorization of some events that fall in multiple categories.
  name: event.category
  normalize:
    - array
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.
    `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
    The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.
  name: event.kind
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.
    `event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.
    This field is an array. This will allow proper categorization of some events that fall in multiple event types.
  name: event.type
  normalize:
    - array
  type: keyword
- description: |-
    Percent CPU used which is normalized by the number of CPU cores and it ranges from 0 to 1.
    Scaling factor: 1000.
    For example: For a two core host, this value should be the average of the two cores, between 0 and 1.
  name: host.cpu.usage
  type: scaled_float
- description: Country ISO code.
  name: observer.geo.country_iso_code
  type: keyword
- description: Longitude and latitude.
  name: observer.geo.location
  type: geo_point
- description: Interface name as reported by the system.
  name: observer.egress.interface.name
  type: keyword
- description: Interface name as reported by the system.
  name: observer.ingress.interface.name
  type: keyword
- description: IP addresses of the observer.
  name: observer.ip
  normalize:
    - array
  type: ip
- description: Operating system platform (such centos, ubuntu, windows).
  name: observer.os.platform
  type: keyword
- description: Observer version.
  name: observer.version
  type: keyword
- description: |-
    The type of the observer the data is coming from.
    There is no predefined list of observer types. Some examples are `forwarder`, `firewall`, `ids`, `ips`, `proxy`, `poller`, `sensor`, `APM server`.
  name: observer.type
  type: keyword
- description: Organization name.
  multi_fields:
    - name: text
      type: match_only_text
  name: organization.name
  type: keyword
- description: All of the IPs seen on your event.
  name: related.ip
  normalize:
    - array
  type: ip
- description: List of keywords used to tag each event.
  name: tags
  normalize:
    - array
  type: keyword
