- description: |-
    Some event destination addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
    Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
  name: destination.address
  type: keyword
- description: Destination domain.
  name: destination.domain
  type: keyword
- description: IP address of the destination (IPv4 or IPv6).
  name: destination.ip
  type: ip
- description: Port of the destination.
  name: destination.port
  type: long
- description: |-
    ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
    When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
  name: ecs.version
  type: keyword
- description: Error message.
  name: error.message
  type: match_only_text
- description: |-
    Hostname of the host.
    It normally contains what the `hostname` command returns on the host machine.
  name: host.hostname
  type: keyword
- description: Size in bytes of the request body.
  name: http.request.body.bytes
  type: long
- description: |-
    HTTP request method.
    Prior to ECS 1.6.0 the following guidance was provided:
    "The field value must be normalized to lowercase for querying."
    As of ECS 1.6.0, the guidance is deprecated because the original case of the method may be useful in anomaly detection.  Original case will be mandated in ECS 2.0.0
  name: http.request.method
  type: keyword
- description: Referrer for this HTTP request.
  name: http.request.referrer
  type: keyword
- description: Size in bytes of the response body.
  name: http.response.body.bytes
  type: long
- description: HTTP response status code.
  name: http.response.status_code
  type: long
- description: HTTP version.
  name: http.version
  type: keyword
- description: |-
    For log events the message field contains the log message, optimized for viewing in a log viewer.
    For structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.
    If multiple messages exist, they can be combined into one message.
  name: message
  type: match_only_text
- description: Host IP address when the source IP address is the proxy.
  name: network.forwarded_ip
  type: ip
- description: All of the IPs seen on your event.
  name: related.ip
  type: ip
- description: All the user names or other user identifiers seen on the event.
  name: related.user
  type: keyword
- description: |-
    Some event source addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
    Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
  name: source.address
  type: keyword
- description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
  name: source.as.number
  type: long
- description: Organization name.
  name: source.as.organization.name
  type: keyword
- description: City name.
  name: source.geo.city_name
  type: keyword
- description: Name of the continent.
  name: source.geo.continent_name
  type: keyword
- description: Country ISO code.
  name: source.geo.country_iso_code
  type: keyword
- description: Country name.
  name: source.geo.country_name
  type: keyword
- description: Longitude and latitude.
  level: core
  name: source.geo.location
  type: geo_point
- description: Region ISO code.
  name: source.geo.region_iso_code
  type: keyword
- description: Region name.
  name: source.geo.region_name
  type: keyword
- description: IP address of the source (IPv4 or IPv6).
  name: source.ip
  type: ip
- description: List of keywords used to tag each event.
  name: tags
  type: keyword
- description: |-
    Domain of the url, such as "www.elastic.co".
    In some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.
    If the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field.
  name: url.domain
  type: keyword
- description: |-
    The field contains the file extension from the original request url, excluding the leading dot.
    The file extension is only set if it exists, as not every url has a file extension.
    The leading period must not be included. For example, the value must be "png", not ".png".
    Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").
  name: url.extension
  type: keyword
- description: |-
    Unmodified original url as seen in the event source.
    Note that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.
    This field is meant to represent the URL as it was observed, complete or not.
  name: url.original
  type: wildcard
- description: Path of the request, such as "/search".
  name: url.path
  type: wildcard
- description: |-
    The query field describes the query string of the request, such as "q=elasticsearch".
    The `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.
  name: url.query
  type: keyword
- description: Short name or login of the user.
  name: user.name
  type: keyword
- description: Name of the device.
  name: user_agent.device.name
  type: keyword
- description: Name of the device.
  name: user_agent.device.name
  type: keyword
- description: Name of the user agent.
  name: user_agent.name
  type: keyword
- description: Name of the user agent.
  name: user_agent.name
  type: keyword
- description: Unparsed user_agent string.
  name: user_agent.original
  type: keyword
- description: Unparsed user_agent string.
  name: user_agent.original
  type: keyword
- description: Operating system name, including the version or code name.
  name: user_agent.os.full
  type: keyword
- description: Operating system name, without the version.
  name: user_agent.os.name
  type: keyword
- description: Operating system name, without the version.
  name: user_agent.os.name
  type: keyword
- description: Operating system version as a raw string.
  name: user_agent.os.version
  type: keyword
- description: Version of the user agent.
  name: user_agent.version
  type: keyword
