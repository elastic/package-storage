- description: |-
    ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
    When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
  name: ecs.version
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.
    `event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.
    This field is an array. This will allow proper categorization of some events that fall in multiple categories.
  name: event.category
  type: keyword
- description: |-
    event.created contains the date/time when the event was first read by an agent, or by your pipeline.
    This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.
    In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.
    In case the two timestamps are identical, @timestamp should be used.
  name: event.created
  type: date
- description: |-
    Timestamp when an event arrived in the central data store.
    This is different from `@timestamp`, which is when the event originally occurred.  It's also different from `event.created`, which is meant to capture the first time an agent saw the event.
    In normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.
  name: event.ingested
  type: date
- description: |-
    This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.
    `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
    The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.
  name: event.kind
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.
    `event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.
    This field is an array. This will allow proper categorization of some events that fall in multiple event types.
  name: event.type
  type: keyword
- description: |-
    In the OSI Model this would be the Network Layer. ipv4, ipv6, ipsec, pim, etc
    The field value must be normalized to lowercase for querying.
  name: network.type
  type: keyword
- description: All of the IPs seen on your event.
  name: related.ip
  type: ip
- description: City name.
  name: host.geo.city_name
  type: keyword
- description: Name of the continent.
  name: host.geo.continent_name
  type: keyword
- description: Country ISO code.
  name: host.geo.country_iso_code
  type: keyword
- description: Country name.
  name: host.geo.country_name
  type: keyword
- description: Longitude and latitude.
  name: host.geo.location
  type: geo_point
- description: |-
    User-defined description of a location, at the level of granularity they care about.
    Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
    Not typically used in automated geolocation.
  name: host.geo.name
  type: keyword
- description: Region ISO code.
  name: host.geo.region_iso_code
  type: keyword
- description: Region name.
  name: host.geo.region_name
  type: keyword
- description: Host ip addresses.
  name: host.ip
  type: ip
- description: City name.
  name: server.geo.city_name
  type: keyword
- description: Name of the continent.
  name: server.geo.continent_name
  type: keyword
- description: Country ISO code.
  name: server.geo.country_iso_code
  type: keyword
- description: Country name.
  name: server.geo.country_name
  type: keyword
- description: Longitude and latitude.
  name: server.geo.location
  type: geo_point
- description: |-
    User-defined description of a location, at the level of granularity they care about.
    Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
    Not typically used in automated geolocation.
  name: server.geo.name
  type: keyword
- description: Region ISO code.
  name: server.geo.region_iso_code
  type: keyword
- description: Region name.
  name: server.geo.region_name
  type: keyword
- description: IP address of the server (IPv4 or IPv6).
  name: server.ip
  type: ip
- description: Port of the server.
  name: server.port
  type: long
- description: Distinguished name (DN) of issuing certificate authority.
  name: tls.server.x509.issuer.distinguished_name
  type: keyword
- description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
  name: tls.server.x509.serial_number
  type: keyword
- description: Distinguished name (DN) of the certificate subject entity.
  name: tls.server.x509.subject.distinguished_name
  type: keyword
- description: List of common name (CN) of issuing certificate authority.
  name: tls.server.x509.issuer.common_name
  type: keyword
- description: List of common names (CN) of subject.
  name: tls.server.x509.subject.common_name
  type: keyword
- description: Subject of the issuer of the x.509 certificate presented by the server.
  name: tls.server.issuer
  type: keyword
- description: Subject of the x.509 certificate presented by the server.
  name: tls.server.subject
  type: keyword
