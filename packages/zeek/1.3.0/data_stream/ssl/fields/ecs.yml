- description: |-
    Some event client addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
    Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
  name: client.address
  type: keyword
- description: |-
    Some event destination addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
    Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
  name: destination.address
  type: keyword
- description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
  name: destination.as.number
  type: long
- description: Organization name.
  name: destination.as.organization.name
  type: keyword
- description: City name.
  name: destination.geo.city_name
  type: keyword
- description: Name of the continent.
  name: destination.geo.continent_name
  type: keyword
- description: Country ISO code.
  name: destination.geo.country_iso_code
  type: keyword
- description: Country name.
  name: destination.geo.country_name
  type: keyword
- description: Longitude and latitude.
  level: core
  name: destination.geo.location
  type: geo_point
- description: |-
    User-defined description of a location, at the level of granularity they care about.
    Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
    Not typically used in automated geolocation.
  name: destination.geo.name
  type: keyword
- description: Region ISO code.
  name: destination.geo.region_iso_code
  type: keyword
- description: Region name.
  name: destination.geo.region_name
  type: keyword
- description: IP address of the destination (IPv4 or IPv6).
  name: destination.ip
  type: ip
- description: Port of the destination.
  name: destination.port
  type: long
- description: |-
    ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
    When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
  name: ecs.version
  type: keyword
- description: Error message.
  name: error.message
  type: text
- description: |-
    This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.
    `event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.
    This field is an array. This will allow proper categorization of some events that fall in multiple categories.
  name: event.category
  type: keyword
- description: |-
    event.created contains the date/time when the event was first read by an agent, or by your pipeline.
    This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.
    In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.
    In case the two timestamps are identical, @timestamp should be used.
  name: event.created
  type: date
- description: Unique ID to describe the event.
  name: event.id
  type: keyword
- description: |-
    Timestamp when an event arrived in the central data store.
    This is different from `@timestamp`, which is when the event originally occurred.  It's also different from `event.created`, which is meant to capture the first time an agent saw the event.
    In normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.
  name: event.ingested
  type: date
- description: |-
    This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.
    `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
    The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.
  name: event.kind
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.
    `event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.
    This field is an array. This will allow proper categorization of some events that fall in multiple event types.
  name: event.type
  type: keyword
- description: Host ip addresses.
  name: host.ip
  type: ip
- description: |-
    A hash of source and destination IPs and ports, as well as the protocol used in a communication. This is a tool-agnostic standard to identify flows.
    Learn more at https://github.com/corelight/community-id-spec.
  name: network.community_id
  type: keyword
- description: |-
    Same as network.iana_number, but instead using the Keyword name of the transport layer (udp, tcp, ipv6-icmp, etc.)
    The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
  name: network.transport
  type: keyword
- description: All of the IPs seen on your event.
  name: related.ip
  type: ip
- description: |-
    Some event server addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
    Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
  name: server.address
  type: keyword
- description: |-
    Some event source addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
    Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
  name: source.address
  type: keyword
- description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
  name: source.as.number
  type: long
- description: Organization name.
  name: source.as.organization.name
  type: keyword
- description: City name.
  name: source.geo.city_name
  type: keyword
- description: Name of the continent.
  name: source.geo.continent_name
  type: keyword
- description: Country ISO code.
  name: source.geo.country_iso_code
  type: keyword
- description: Country name.
  name: source.geo.country_name
  type: keyword
- description: Longitude and latitude.
  level: core
  name: source.geo.location
  type: geo_point
- description: |-
    User-defined description of a location, at the level of granularity they care about.
    Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
    Not typically used in automated geolocation.
  name: source.geo.name
  type: keyword
- description: Region ISO code.
  name: source.geo.region_iso_code
  type: keyword
- description: Region name.
  name: source.geo.region_name
  type: keyword
- description: IP address of the source (IPv4 or IPv6).
  name: source.ip
  type: ip
- description: Port of the source.
  name: source.port
  type: long
- description: String indicating the cipher used during the current connection.
  name: tls.cipher
  type: keyword
- description: Distinguished name of subject of the issuer of the x.509 certificate presented by the client.
  name: tls.client.issuer
  type: keyword
- description: List of common names (CN) of subject.
  name: tls.client.x509.subject.common_name
  type: keyword
- description: List of country (C) code
  name: tls.client.x509.subject.country
  type: keyword
- description: List of locality names (L)
  name: tls.client.x509.subject.locality
  type: keyword
- description: List of organizations (O) of subject.
  name: tls.client.x509.subject.organization
  type: keyword
- description: List of organizational units (OU) of subject.
  name: tls.client.x509.subject.organizational_unit
  type: keyword
- description: List of state or province names (ST, S, or P)
  name: tls.client.x509.subject.state_or_province
  type: keyword
- description: String indicating the curve used for the given cipher, when applicable.
  name: tls.curve
  type: keyword
- description: Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel.
  name: tls.established
  type: boolean
- description: Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation.
  name: tls.resumed
  type: boolean
- description: Subject of the issuer of the x.509 certificate presented by the server.
  name: tls.server.issuer
  type: keyword
- description: Subject of the x.509 certificate presented by the server.
  name: tls.server.subject
  type: keyword
- description: List of common name (CN) of issuing certificate authority.
  name: tls.server.x509.issuer.common_name
  type: keyword
- description: List of country (C) codes
  name: tls.server.x509.issuer.country
  type: keyword
- description: Distinguished name (DN) of issuing certificate authority.
  name: tls.server.x509.issuer.distinguished_name
  type: keyword
- description: List of locality names (L)
  name: tls.server.x509.issuer.locality
  type: keyword
- description: List of organizations (O) of issuing certificate authority.
  name: tls.server.x509.issuer.organization
  type: keyword
- description: List of organizational units (OU) of issuing certificate authority.
  name: tls.server.x509.issuer.organizational_unit
  type: keyword
- description: List of state or province names (ST, S, or P)
  name: tls.server.x509.issuer.state_or_province
  type: keyword
- description: List of common names (CN) of subject.
  name: tls.server.x509.subject.common_name
  type: keyword
- description: List of country (C) code
  name: tls.server.x509.subject.country
  type: keyword
- description: List of locality names (L)
  name: tls.server.x509.subject.locality
  type: keyword
- description: List of organizations (O) of subject.
  name: tls.server.x509.subject.organization
  type: keyword
- description: List of organizational units (OU) of subject.
  name: tls.server.x509.subject.organizational_unit
  type: keyword
- description: List of state or province names (ST, S, or P)
  name: tls.server.x509.subject.state_or_province
  type: keyword
- description: Numeric part of the version parsed from the original string.
  name: tls.version
  type: keyword
- description: Normalized lowercase protocol name parsed from original string.
  name: tls.version_protocol
  type: keyword
- description: Normalized lowercase protocol name parsed from original string.
  name: tls.version_protocol
  type: keyword
