- description: |-
    Some event destination addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
    Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
  name: destination.address
  type: keyword
- description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
  name: destination.as.number
  type: long
- description: Organization name.
  multi_fields:
    - name: text
      type: match_only_text
  name: destination.as.organization.name
  type: keyword
- description: City name.
  name: destination.geo.city_name
  type: keyword
- description: Name of the continent.
  name: destination.geo.continent_name
  type: keyword
- description: Country ISO code.
  name: destination.geo.country_iso_code
  type: keyword
- description: Country name.
  name: destination.geo.country_name
  type: keyword
- description: Longitude and latitude.
  level: core
  name: destination.geo.location
  type: geo_point
- description: |-
    User-defined description of a location, at the level of granularity they care about.
    Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
    Not typically used in automated geolocation.
  name: destination.geo.name
  type: keyword
- description: Region ISO code.
  name: destination.geo.region_iso_code
  type: keyword
- description: Region name.
  name: destination.geo.region_name
  type: keyword
- description: IP address of the destination (IPv4 or IPv6).
  name: destination.ip
  type: ip
- description: Port of the destination.
  name: destination.port
  type: long
- description: |-
    ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
    When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
  name: ecs.version
  type: keyword
- description: Error message.
  name: error.message
  type: match_only_text
- description: |-
    event.created contains the date/time when the event was first read by an agent, or by your pipeline.
    This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.
    In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.
    In case the two timestamps are identical, @timestamp should be used.
  name: event.created
  type: date
- description: |-
    Timestamp when an event arrived in the central data store.
    This is different from `@timestamp`, which is when the event originally occurred.  It's also different from `event.created`, which is meant to capture the first time an agent saw the event.
    In normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.
  name: event.ingested
  type: date
- description: |-
    This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.
    `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
    The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.
  name: event.kind
  type: keyword
- description: |-
    Raw text message of entire event. Used to demonstrate log integrity or where the full log message (before splitting it up in multiple parts) may be required, e.g. for reindex.
    This field is not indexed and doc_values are disabled. It cannot be searched, but it can be retrieved from `_source`. If users wish to override this and index this field, please see `Field data types` in the `Elasticsearch Reference`.
  doc_values: false
  index: false
  name: event.original
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.
    `event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.
    This field is an array. This will allow proper categorization of some events that fall in multiple event types.
  name: event.type
  type: keyword
- description: Host ip addresses.
  name: host.ip
  type: ip
- description: |-
    A hash of source and destination IPs and ports, as well as the protocol used in a communication. This is a tool-agnostic standard to identify flows.
    Learn more at https://github.com/corelight/community-id-spec.
  name: network.community_id
  type: keyword
- description: All of the IPs seen on your event.
  name: related.ip
  type: ip
- description: |-
    Some event source addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
    Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
  name: source.address
  type: keyword
- description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
  name: source.as.number
  type: long
- description: Organization name.
  multi_fields:
    - name: text
      type: match_only_text
  name: source.as.organization.name
  type: keyword
- description: City name.
  name: source.geo.city_name
  type: keyword
- description: Name of the continent.
  name: source.geo.continent_name
  type: keyword
- description: Country ISO code.
  name: source.geo.country_iso_code
  type: keyword
- description: Country name.
  name: source.geo.country_name
  type: keyword
- description: Longitude and latitude.
  level: core
  name: source.geo.location
  type: geo_point
- description: |-
    User-defined description of a location, at the level of granularity they care about.
    Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
    Not typically used in automated geolocation.
  name: source.geo.name
  type: keyword
- description: Region ISO code.
  name: source.geo.region_iso_code
  type: keyword
- description: Region name.
  name: source.geo.region_name
  type: keyword
- description: IP address of the source (IPv4 or IPv6).
  name: source.ip
  type: ip
- description: Port of the source.
  name: source.port
  type: long
- description: A list of associated indicators objects enriching the event, and the context of that association/enrichment.
  name: threat.enrichments
  type: nested
- description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
  name: threat.indicator.as.number
  type: long
- description: Organization name.
  multi_fields:
    - name: text
      type: match_only_text
  name: threat.indicator.as.organization.name
  type: keyword
- description: Identifies a threat indicator as an email address (irrespective of direction).
  name: threat.indicator.email.address
  type: keyword
- description: Name of the file including the extension, without the directory.
  name: threat.indicator.file.name
  type: keyword
- description: City name.
  name: threat.indicator.geo.city_name
  type: keyword
- description: Name of the continent.
  name: threat.indicator.geo.continent_name
  type: keyword
- description: Country ISO code.
  name: threat.indicator.geo.country_iso_code
  type: keyword
- description: Country name.
  name: threat.indicator.geo.country_name
  type: keyword
- description: Longitude and latitude.
  name: threat.indicator.geo.location
  type: geo_point
- description: Region ISO code.
  name: threat.indicator.geo.region_iso_code
  type: keyword
- description: Region name.
  name: threat.indicator.geo.region_name
  type: keyword
- description: The time zone of the location, such as IANA time zone name.
  name: threat.indicator.geo.timezone
  type: keyword
- description: Identifies a threat indicator as an IP address (irrespective of direction).
  name: threat.indicator.ip
  type: ip
- description: Type of indicator as represented by Cyber Observable in STIX 2.0.
  name: threat.indicator.type
  type: keyword
- description: |-
    Domain of the url, such as "www.elastic.co".
    In some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.
    If the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field.
  name: threat.indicator.url.domain
  type: keyword
- description: |-
    The field contains the file extension from the original request url, excluding the leading dot.
    The file extension is only set if it exists, as not every url has a file extension.
    The leading period must not be included. For example, the value must be "png", not ".png".
    Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").
  name: threat.indicator.url.extension
  type: keyword
- description: |-
    Portion of the url after the `#`, such as "top".
    The `#` is not part of the fragment.
  name: threat.indicator.url.fragment
  type: keyword
- description: If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.
  multi_fields:
    - name: text
      type: match_only_text
  name: threat.indicator.url.full
  type: wildcard
- description: |-
    Unmodified original url as seen in the event source.
    Note that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.
    This field is meant to represent the URL as it was observed, complete or not.
  multi_fields:
    - name: text
      type: match_only_text
  name: threat.indicator.url.original
  type: wildcard
- description: Password of the request.
  name: threat.indicator.url.password
  type: keyword
- description: Path of the request, such as "/search".
  name: threat.indicator.url.path
  type: wildcard
- description: Port of the request, such as 443.
  name: threat.indicator.url.port
  type: long
- description: |-
    The query field describes the query string of the request, such as "q=elasticsearch".
    The `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.
  name: threat.indicator.url.query
  type: keyword
- description: |-
    The highest registered url domain, stripped of the subdomain.
    For example, the registered domain for "foo.example.com" is "example.com".
    This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
  name: threat.indicator.url.registered_domain
  type: keyword
- description: |-
    Scheme of the request, such as "https".
    Note: The `:` is not part of the scheme.
  name: threat.indicator.url.scheme
  type: keyword
- description: |-
    The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.
    For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
  name: threat.indicator.url.subdomain
  type: keyword
- description: |-
    The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".
    This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
  name: threat.indicator.url.top_level_domain
  type: keyword
- description: Username of the request.
  name: threat.indicator.url.username
  type: keyword
