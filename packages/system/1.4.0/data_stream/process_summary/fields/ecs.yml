- description: |-
    Date/time when the event originated.
    This is the date/time extracted from the event, typically representing when the event was generated by the source.
    If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.
    Required field for all events.
  name: '@timestamp'
  type: date
- description: |-
    For log events the message field contains the log message, optimized for viewing in a log viewer.
    For structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.
    If multiple messages exist, they can be combined into one message.
  name: message
  type: match_only_text
- description: The group fields are meant to represent groups that are relevant to the event.
  fields:
    - description: |-
        Name of the directory the group is a member of.
        For example, an LDAP or Active Directory domain name.
      name: domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      name: id
      type: keyword
    - description: Name of the group.
      name: name
      type: keyword
  name: group
  type: group
- description: Unique identifier for the group on the system/platform.
  name: group.id
  type: keyword
- description: Name of the group.
  name: group.name
  type: keyword
- description: |-
    A host is defined as a general computing instance.
    ECS host.* fields should be populated with details about the host on which the event happened, or from which the measurement was taken. Host types include hardware, virtual machines, Docker containers, and Kubernetes nodes.
  fields:
    - description: Operating system architecture.
      name: architecture
      type: keyword
    - description: |-
        Percent CPU used which is normalized by the number of CPU cores and it ranges from 0 to 1.
        Scaling factor: 1000.
        For example: For a two core host, this value should be the average of the two cores, between 0 and 1.
      name: cpu.usage
      type: scaled_float
    - description: The total number of bytes (gauge) read successfully (aggregated from all disks) since the last metric collection.
      name: disk.read.bytes
      type: long
    - description: The total number of bytes (gauge) written successfully (aggregated from all disks) since the last metric collection.
      name: disk.write.bytes
      type: long
    - description: |-
        Name of the domain of which the host is a member.
        For example, on Windows this could be the host's Active Directory domain or NetBIOS domain name. For Linux this could be the domain of the host's LDAP provider.
      name: domain
      type: keyword
    - description: City name.
      name: geo.city_name
      type: keyword
    - description: Two-letter code representing continent's name.
      name: geo.continent_code
      type: keyword
    - description: Name of the continent.
      name: geo.continent_name
      type: keyword
    - description: Country ISO code.
      name: geo.country_iso_code
      type: keyword
    - description: Country name.
      name: geo.country_name
      type: keyword
    - description: Longitude and latitude.
      name: geo.location
      type: geo_point
    - description: |-
        User-defined description of a location, at the level of granularity they care about.
        Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
        Not typically used in automated geolocation.
      name: geo.name
      type: keyword
    - description: |-
        Postal code associated with the location.
        Values appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.
      name: geo.postal_code
      type: keyword
    - description: Region ISO code.
      name: geo.region_iso_code
      type: keyword
    - description: Region name.
      name: geo.region_name
      type: keyword
    - description: The time zone of the location, such as IANA time zone name.
      name: geo.timezone
      type: keyword
    - description: |-
        Hostname of the host.
        It normally contains what the `hostname` command returns on the host machine.
      name: hostname
      type: keyword
    - description: |-
        Unique host id.
        As hostname is not always unique, use values that are meaningful in your environment.
        Example: The current usage of `beat.name`.
      name: id
      type: keyword
    - description: Host ip addresses.
      name: ip
      type: ip
    - description: |-
        Host MAC addresses.
        The notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.
      name: mac
      type: keyword
    - description: |-
        Name of the host.
        It can contain what `hostname` returns on Unix systems, the fully qualified domain name, or a name specified by the user. The sender decides which value to use.
      name: name
      type: keyword
    - description: The number of bytes (gauge) sent out on all network interfaces by the host since the last metric collection.
      name: network.egress.bytes
      type: long
    - description: The number of packets (gauge) sent out on all network interfaces by the host since the last metric collection.
      name: network.egress.packets
      type: long
    - description: The number of bytes received (gauge) on all network interfaces by the host since the last metric collection.
      name: network.ingress.bytes
      type: long
    - description: The number of packets (gauge) received on all network interfaces by the host since the last metric collection.
      name: network.ingress.packets
      type: long
    - description: OS family (such as redhat, debian, freebsd, windows).
      name: os.family
      type: keyword
    - description: Operating system name, including the version or code name.
      name: os.full
      type: keyword
    - description: Operating system kernel version as a raw string.
      name: os.kernel
      type: keyword
    - description: Operating system name, without the version.
      name: os.name
      type: keyword
    - description: Operating system platform (such centos, ubuntu, windows).
      name: os.platform
      type: keyword
    - description: |-
        Use the `os.type` field to categorize the operating system into one of the broad commercial families.
        One of these following values should be used (lowercase): linux, macos, unix, windows.
        If the OS you're dealing with is not in the list, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition.
      name: os.type
      type: keyword
    - description: Operating system version as a raw string.
      name: os.version
      type: keyword
    - description: |-
        Type of host.
        For Cloud providers this can be the machine type like `t2.medium`. If vm, this could be the container, for example, or other information meaningful in your environment.
      name: type
      type: keyword
    - description: Seconds the host has been up.
      name: uptime
      type: long
    - description: |-
        Name of the directory the user is a member of.
        For example, an LDAP or Active Directory domain name.
      name: user.domain
      type: keyword
    - description: User email address.
      name: user.email
      type: keyword
    - description: User's full name, if available.
      name: user.full_name
      type: keyword
    - description: |-
        Name of the directory the group is a member of.
        For example, an LDAP or Active Directory domain name.
      name: user.group.domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      name: user.group.id
      type: keyword
    - description: Name of the group.
      name: user.group.name
      type: keyword
    - description: |-
        Unique user hash to correlate information for a user in anonymized form.
        Useful if `user.id` or `user.name` contain confidential information and cannot be used.
      name: user.hash
      type: keyword
    - description: Unique identifier of the user.
      name: user.id
      type: keyword
    - description: Short name or login of the user.
      name: user.name
      type: keyword
    - description: Array of user roles at the time of the event.
      name: user.roles
      type: keyword
  name: host
  type: group
- description: |-
    Hostname of the host.
    It normally contains what the `hostname` command returns on the host machine.
  name: host.hostname
  type: keyword
- description: |-
    These fields contain information about a process.
    These fields can help you correlate metrics information with a process id/name from a log message.  The `process.pid` often stays in the metric itself and is copied to the global field for correlation.
  fields:
    - description: |-
        Array of process arguments, starting with the absolute path to the executable.
        May be filtered to protect sensitive information.
      name: args
      type: keyword
    - description: |-
        Length of the process.args array.
        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.
      name: args_count
      type: long
    - description: |-
        The hashing algorithm used to sign the process.
        This value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.
      name: code_signature.digest_algorithm
      type: keyword
    - description: Boolean to capture if a signature is present.
      name: code_signature.exists
      type: boolean
    - description: |-
        The identifier used to sign the process.
        This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.
      name: code_signature.signing_id
      type: keyword
    - description: |-
        Additional information about the certificate status.
        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
      name: code_signature.status
      type: keyword
    - description: Subject name of the code signer
      name: code_signature.subject_name
      type: keyword
    - description: |-
        The team identifier used to sign the process.
        This is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.
      name: code_signature.team_id
      type: keyword
    - description: Date and time when the code signature was generated and signed.
      name: code_signature.timestamp
      type: date
    - description: |-
        Stores the trust status of the certificate chain.
        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
      name: code_signature.trusted
      type: boolean
    - description: |-
        Boolean to capture if the digital signature is verified against the binary content.
        Leave unpopulated if a certificate was unchecked.
      name: code_signature.valid
      type: boolean
    - description: |-
        Full command line that started the process, including the absolute path to the executable, and all arguments.
        Some arguments may be filtered to protect sensitive information.
      name: command_line
      type: wildcard
    - description: Machine architecture of the ELF file.
      name: elf.architecture
      type: keyword
    - description: Byte sequence of ELF file.
      name: elf.byte_order
      type: keyword
    - description: CPU type of the ELF file.
      name: elf.cpu_type
      type: keyword
    - description: Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.
      name: elf.creation_date
      type: date
    - description: List of exported element names and types.
      name: elf.exports
      type: flattened
    - description: Version of the ELF Application Binary Interface (ABI).
      name: elf.header.abi_version
      type: keyword
    - description: Header class of the ELF file.
      name: elf.header.class
      type: keyword
    - description: Data table of the ELF header.
      name: elf.header.data
      type: keyword
    - description: Header entrypoint of the ELF file.
      name: elf.header.entrypoint
      type: long
    - description: '"0x1" for original ELF files.'
      name: elf.header.object_version
      type: keyword
    - description: Application Binary Interface (ABI) of the Linux OS.
      name: elf.header.os_abi
      type: keyword
    - description: Header type of the ELF file.
      name: elf.header.type
      type: keyword
    - description: Version of the ELF header.
      name: elf.header.version
      type: keyword
    - description: List of imported element names and types.
      name: elf.imports
      type: flattened
    - description: |-
        An array containing an object for each section of the ELF file.
        The keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.
      name: elf.sections
      type: nested
    - description: Chi-square probability distribution of the section.
      name: elf.sections.chi2
      type: long
    - description: Shannon entropy calculation from the section.
      name: elf.sections.entropy
      type: long
    - description: ELF Section List flags.
      name: elf.sections.flags
      type: keyword
    - description: ELF Section List name.
      name: elf.sections.name
      type: keyword
    - description: ELF Section List offset.
      name: elf.sections.physical_offset
      type: keyword
    - description: ELF Section List physical size.
      name: elf.sections.physical_size
      type: long
    - description: ELF Section List type.
      name: elf.sections.type
      type: keyword
    - description: ELF Section List virtual address.
      name: elf.sections.virtual_address
      type: long
    - description: ELF Section List virtual size.
      name: elf.sections.virtual_size
      type: long
    - description: |-
        An array containing an object for each segment of the ELF file.
        The keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.
      name: elf.segments
      type: nested
    - description: ELF object segment sections.
      name: elf.segments.sections
      type: keyword
    - description: ELF object segment type.
      name: elf.segments.type
      type: keyword
    - description: List of shared libraries used by this ELF object.
      name: elf.shared_libraries
      type: keyword
    - description: telfhash symbol hash for ELF file.
      name: elf.telfhash
      type: keyword
    - description: The time the process ended.
      name: end
      type: date
    - description: |-
        Unique identifier for the process.
        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
      name: entity_id
      type: keyword
    - description: Absolute path to the process executable.
      name: executable
      type: keyword
    - description: |-
        The exit code of the process, if this is a termination event.
        The field should be absent if there is no exit code for the event (e.g. process start).
      name: exit_code
      type: long
    - description: MD5 hash.
      name: hash.md5
      type: keyword
    - description: SHA1 hash.
      name: hash.sha1
      type: keyword
    - description: SHA256 hash.
      name: hash.sha256
      type: keyword
    - description: SHA512 hash.
      name: hash.sha512
      type: keyword
    - description: SSDEEP hash.
      name: hash.ssdeep
      type: keyword
    - description: |-
        Process name.
        Sometimes called program name or similar.
      name: name
      type: keyword
    - description: |-
        Array of process arguments, starting with the absolute path to the executable.
        May be filtered to protect sensitive information.
      name: parent.args
      type: keyword
    - description: |-
        Length of the process.args array.
        This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.
      name: parent.args_count
      type: long
    - description: |-
        The hashing algorithm used to sign the process.
        This value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.
      name: parent.code_signature.digest_algorithm
      type: keyword
    - description: Boolean to capture if a signature is present.
      name: parent.code_signature.exists
      type: boolean
    - description: |-
        The identifier used to sign the process.
        This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.
      name: parent.code_signature.signing_id
      type: keyword
    - description: |-
        Additional information about the certificate status.
        This is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.
      name: parent.code_signature.status
      type: keyword
    - description: Subject name of the code signer
      name: parent.code_signature.subject_name
      type: keyword
    - description: |-
        The team identifier used to sign the process.
        This is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.
      name: parent.code_signature.team_id
      type: keyword
    - description: Date and time when the code signature was generated and signed.
      name: parent.code_signature.timestamp
      type: date
    - description: |-
        Stores the trust status of the certificate chain.
        Validating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.
      name: parent.code_signature.trusted
      type: boolean
    - description: |-
        Boolean to capture if the digital signature is verified against the binary content.
        Leave unpopulated if a certificate was unchecked.
      name: parent.code_signature.valid
      type: boolean
    - description: |-
        Full command line that started the process, including the absolute path to the executable, and all arguments.
        Some arguments may be filtered to protect sensitive information.
      name: parent.command_line
      type: wildcard
    - description: Machine architecture of the ELF file.
      name: parent.elf.architecture
      type: keyword
    - description: Byte sequence of ELF file.
      name: parent.elf.byte_order
      type: keyword
    - description: CPU type of the ELF file.
      name: parent.elf.cpu_type
      type: keyword
    - description: Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.
      name: parent.elf.creation_date
      type: date
    - description: List of exported element names and types.
      name: parent.elf.exports
      type: flattened
    - description: Version of the ELF Application Binary Interface (ABI).
      name: parent.elf.header.abi_version
      type: keyword
    - description: Header class of the ELF file.
      name: parent.elf.header.class
      type: keyword
    - description: Data table of the ELF header.
      name: parent.elf.header.data
      type: keyword
    - description: Header entrypoint of the ELF file.
      name: parent.elf.header.entrypoint
      type: long
    - description: '"0x1" for original ELF files.'
      name: parent.elf.header.object_version
      type: keyword
    - description: Application Binary Interface (ABI) of the Linux OS.
      name: parent.elf.header.os_abi
      type: keyword
    - description: Header type of the ELF file.
      name: parent.elf.header.type
      type: keyword
    - description: Version of the ELF header.
      name: parent.elf.header.version
      type: keyword
    - description: List of imported element names and types.
      name: parent.elf.imports
      type: flattened
    - description: |-
        An array containing an object for each section of the ELF file.
        The keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.
      name: parent.elf.sections
      type: nested
    - description: Chi-square probability distribution of the section.
      name: parent.elf.sections.chi2
      type: long
    - description: Shannon entropy calculation from the section.
      name: parent.elf.sections.entropy
      type: long
    - description: ELF Section List flags.
      name: parent.elf.sections.flags
      type: keyword
    - description: ELF Section List name.
      name: parent.elf.sections.name
      type: keyword
    - description: ELF Section List offset.
      name: parent.elf.sections.physical_offset
      type: keyword
    - description: ELF Section List physical size.
      name: parent.elf.sections.physical_size
      type: long
    - description: ELF Section List type.
      name: parent.elf.sections.type
      type: keyword
    - description: ELF Section List virtual address.
      name: parent.elf.sections.virtual_address
      type: long
    - description: ELF Section List virtual size.
      name: parent.elf.sections.virtual_size
      type: long
    - description: |-
        An array containing an object for each segment of the ELF file.
        The keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.
      name: parent.elf.segments
      type: nested
    - description: ELF object segment sections.
      name: parent.elf.segments.sections
      type: keyword
    - description: ELF object segment type.
      name: parent.elf.segments.type
      type: keyword
    - description: List of shared libraries used by this ELF object.
      name: parent.elf.shared_libraries
      type: keyword
    - description: telfhash symbol hash for ELF file.
      name: parent.elf.telfhash
      type: keyword
    - description: The time the process ended.
      name: parent.end
      type: date
    - description: |-
        Unique identifier for the process.
        The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
        Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
      name: parent.entity_id
      type: keyword
    - description: Absolute path to the process executable.
      name: parent.executable
      type: keyword
    - description: |-
        The exit code of the process, if this is a termination event.
        The field should be absent if there is no exit code for the event (e.g. process start).
      name: parent.exit_code
      type: long
    - description: MD5 hash.
      name: parent.hash.md5
      type: keyword
    - description: SHA1 hash.
      name: parent.hash.sha1
      type: keyword
    - description: SHA256 hash.
      name: parent.hash.sha256
      type: keyword
    - description: SHA512 hash.
      name: parent.hash.sha512
      type: keyword
    - description: SSDEEP hash.
      name: parent.hash.ssdeep
      type: keyword
    - description: |-
        Process name.
        Sometimes called program name or similar.
      name: parent.name
      type: keyword
    - description: CPU architecture target for the file.
      name: parent.pe.architecture
      type: keyword
    - description: Internal company name of the file, provided at compile-time.
      name: parent.pe.company
      type: keyword
    - description: Internal description of the file, provided at compile-time.
      name: parent.pe.description
      type: keyword
    - description: Internal version of the file, provided at compile-time.
      name: parent.pe.file_version
      type: keyword
    - description: |-
        A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.
        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
      name: parent.pe.imphash
      type: keyword
    - description: Internal name of the file, provided at compile-time.
      name: parent.pe.original_file_name
      type: keyword
    - description: Internal product name of the file, provided at compile-time.
      name: parent.pe.product
      type: keyword
    - description: Identifier of the group of processes the process belongs to.
      name: parent.pgid
      type: long
    - description: Process id.
      name: parent.pid
      type: long
    - description: Parent process' pid.
      name: parent.ppid
      type: long
    - description: The time the process started.
      name: parent.start
      type: date
    - description: Thread ID.
      name: parent.thread.id
      type: long
    - description: Thread name.
      name: parent.thread.name
      type: keyword
    - description: |-
        Process title.
        The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.
      name: parent.title
      type: keyword
    - description: Seconds the process has been up.
      name: parent.uptime
      type: long
    - description: The working directory of the process.
      name: parent.working_directory
      type: keyword
    - description: CPU architecture target for the file.
      name: pe.architecture
      type: keyword
    - description: Internal company name of the file, provided at compile-time.
      name: pe.company
      type: keyword
    - description: Internal description of the file, provided at compile-time.
      name: pe.description
      type: keyword
    - description: Internal version of the file, provided at compile-time.
      name: pe.file_version
      type: keyword
    - description: |-
        A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.
        Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
      name: pe.imphash
      type: keyword
    - description: Internal name of the file, provided at compile-time.
      name: pe.original_file_name
      type: keyword
    - description: Internal product name of the file, provided at compile-time.
      name: pe.product
      type: keyword
    - description: Identifier of the group of processes the process belongs to.
      name: pgid
      type: long
    - description: Process id.
      name: pid
      type: long
    - description: Parent process' pid.
      name: ppid
      type: long
    - description: The time the process started.
      name: start
      type: date
    - description: Thread ID.
      name: thread.id
      type: long
    - description: Thread name.
      name: thread.name
      type: keyword
    - description: |-
        Process title.
        The proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.
      name: title
      type: keyword
    - description: Seconds the process has been up.
      name: uptime
      type: long
    - description: The working directory of the process.
      name: working_directory
      type: keyword
  name: process
  type: group
- description: |-
    Process name.
    Sometimes called program name or similar.
  name: process.name
  type: keyword
- description: Process id.
  name: process.pid
  type: long
- description: |-
    Source fields capture details about the sender of a network exchange/packet. These fields are populated from a network event, packet, or other event containing details of a network transaction.
    Source fields are usually populated in conjunction with destination fields. The source and destination fields are considered the baseline and should always be filled if an event contains source and destination details from a network transaction. If the event also contains identification of the client and server roles, then the client and server fields should also be populated.
  fields:
    - description: |-
        Some event source addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
        Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
      name: address
      type: keyword
    - description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
      name: as.number
      type: long
    - description: Organization name.
      name: as.organization.name
      type: keyword
    - description: Bytes sent from the source to the destination.
      name: bytes
      type: long
    - description: Source domain.
      name: domain
      type: keyword
    - description: City name.
      name: geo.city_name
      type: keyword
    - description: Two-letter code representing continent's name.
      name: geo.continent_code
      type: keyword
    - description: Name of the continent.
      name: geo.continent_name
      type: keyword
    - description: Country ISO code.
      name: geo.country_iso_code
      type: keyword
    - description: Country name.
      name: geo.country_name
      type: keyword
    - description: Longitude and latitude.
      name: geo.location
      type: geo_point
    - description: |-
        User-defined description of a location, at the level of granularity they care about.
        Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
        Not typically used in automated geolocation.
      name: geo.name
      type: keyword
    - description: |-
        Postal code associated with the location.
        Values appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.
      name: geo.postal_code
      type: keyword
    - description: Region ISO code.
      name: geo.region_iso_code
      type: keyword
    - description: Region name.
      name: geo.region_name
      type: keyword
    - description: The time zone of the location, such as IANA time zone name.
      name: geo.timezone
      type: keyword
    - description: IP address of the source (IPv4 or IPv6).
      name: ip
      type: ip
    - description: |-
        MAC address of the source.
        The notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.
      name: mac
      type: keyword
    - description: |-
        Translated ip of source based NAT sessions (e.g. internal client to internet)
        Typically connections traversing load balancers, firewalls, or routers.
      name: nat.ip
      type: ip
    - description: |-
        Translated port of source based NAT sessions. (e.g. internal client to internet)
        Typically used with load balancers, firewalls, or routers.
      name: nat.port
      type: long
    - description: Packets sent from the source to the destination.
      name: packets
      type: long
    - description: Port of the source.
      name: port
      type: long
    - description: |-
        The highest registered source domain, stripped of the subdomain.
        For example, the registered domain for "foo.example.com" is "example.com".
        This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
      name: registered_domain
      type: keyword
    - description: |-
        The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.
        For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
      name: subdomain
      type: keyword
    - description: |-
        The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".
        This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
      name: top_level_domain
      type: keyword
    - description: |-
        Name of the directory the user is a member of.
        For example, an LDAP or Active Directory domain name.
      name: user.domain
      type: keyword
    - description: User email address.
      name: user.email
      type: keyword
    - description: User's full name, if available.
      name: user.full_name
      type: keyword
    - description: |-
        Name of the directory the group is a member of.
        For example, an LDAP or Active Directory domain name.
      name: user.group.domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      name: user.group.id
      type: keyword
    - description: Name of the group.
      name: user.group.name
      type: keyword
    - description: |-
        Unique user hash to correlate information for a user in anonymized form.
        Useful if `user.id` or `user.name` contain confidential information and cannot be used.
      name: user.hash
      type: keyword
    - description: Unique identifier of the user.
      name: user.id
      type: keyword
    - description: Short name or login of the user.
      name: user.name
      type: keyword
    - description: Array of user roles at the time of the event.
      name: user.roles
      type: keyword
  name: source
  type: group
- description: City name.
  name: source.geo.city_name
  type: keyword
- description: Name of the continent.
  name: source.geo.continent_name
  type: keyword
- description: Country ISO code.
  name: source.geo.country_iso_code
  type: keyword
- description: Longitude and latitude.
  level: core
  name: source.geo.location
  type: geo_point
- description: Region ISO code.
  name: source.geo.region_iso_code
  type: keyword
- description: Region name.
  name: source.geo.region_name
  type: keyword
- description: IP address of the source (IPv4 or IPv6).
  name: source.ip
  type: ip
- description: Port of the source.
  name: source.port
  type: long
- description: |-
    The user fields describe information about the user that is relevant to the event.
    Fields can have one entry or multiple entries. If a user has more than one id, provide an array that includes all of them.
  fields:
    - description: |-
        Name of the directory the user is a member of.
        For example, an LDAP or Active Directory domain name.
      name: changes.domain
      type: keyword
    - description: User email address.
      name: changes.email
      type: keyword
    - description: User's full name, if available.
      name: changes.full_name
      type: keyword
    - description: |-
        Name of the directory the group is a member of.
        For example, an LDAP or Active Directory domain name.
      name: changes.group.domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      name: changes.group.id
      type: keyword
    - description: Name of the group.
      name: changes.group.name
      type: keyword
    - description: |-
        Unique user hash to correlate information for a user in anonymized form.
        Useful if `user.id` or `user.name` contain confidential information and cannot be used.
      name: changes.hash
      type: keyword
    - description: Unique identifier of the user.
      name: changes.id
      type: keyword
    - description: Short name or login of the user.
      name: changes.name
      type: keyword
    - description: Array of user roles at the time of the event.
      name: changes.roles
      type: keyword
    - description: |-
        Name of the directory the user is a member of.
        For example, an LDAP or Active Directory domain name.
      name: domain
      type: keyword
    - description: |-
        Name of the directory the user is a member of.
        For example, an LDAP or Active Directory domain name.
      name: effective.domain
      type: keyword
    - description: User email address.
      name: effective.email
      type: keyword
    - description: User's full name, if available.
      name: effective.full_name
      type: keyword
    - description: |-
        Name of the directory the group is a member of.
        For example, an LDAP or Active Directory domain name.
      name: effective.group.domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      name: effective.group.id
      type: keyword
    - description: Name of the group.
      name: effective.group.name
      type: keyword
    - description: |-
        Unique user hash to correlate information for a user in anonymized form.
        Useful if `user.id` or `user.name` contain confidential information and cannot be used.
      name: effective.hash
      type: keyword
    - description: Unique identifier of the user.
      name: effective.id
      type: keyword
    - description: Short name or login of the user.
      name: effective.name
      type: keyword
    - description: Array of user roles at the time of the event.
      name: effective.roles
      type: keyword
    - description: User email address.
      name: email
      type: keyword
    - description: User's full name, if available.
      name: full_name
      type: keyword
    - description: |-
        Name of the directory the group is a member of.
        For example, an LDAP or Active Directory domain name.
      name: group.domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      name: group.id
      type: keyword
    - description: Name of the group.
      name: group.name
      type: keyword
    - description: |-
        Unique user hash to correlate information for a user in anonymized form.
        Useful if `user.id` or `user.name` contain confidential information and cannot be used.
      name: hash
      type: keyword
    - description: Unique identifier of the user.
      name: id
      type: keyword
    - description: Short name or login of the user.
      name: name
      type: keyword
    - description: Array of user roles at the time of the event.
      name: roles
      type: keyword
    - description: |-
        Name of the directory the user is a member of.
        For example, an LDAP or Active Directory domain name.
      name: target.domain
      type: keyword
    - description: User email address.
      name: target.email
      type: keyword
    - description: User's full name, if available.
      name: target.full_name
      type: keyword
    - description: |-
        Name of the directory the group is a member of.
        For example, an LDAP or Active Directory domain name.
      name: target.group.domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      name: target.group.id
      type: keyword
    - description: Name of the group.
      name: target.group.name
      type: keyword
    - description: |-
        Unique user hash to correlate information for a user in anonymized form.
        Useful if `user.id` or `user.name` contain confidential information and cannot be used.
      name: target.hash
      type: keyword
    - description: Unique identifier of the user.
      name: target.id
      type: keyword
    - description: Short name or login of the user.
      name: target.name
      type: keyword
    - description: Array of user roles at the time of the event.
      name: target.roles
      type: keyword
  name: user
  type: group
- description: Unique identifier of the user.
  name: user.id
  type: keyword
- description: Short name or login of the user.
  name: user.name
  type: keyword
