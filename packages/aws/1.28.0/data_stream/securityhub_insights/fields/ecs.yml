- description: |-
    ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
    When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
  name: ecs.version
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.
    `event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.
    This field is an array. This will allow proper categorization of some events that fall in multiple categories.
  name: event.category
  normalize:
    - array
  type: keyword
- description: |-
    event.created contains the date/time when the event was first read by an agent, or by your pipeline.
    This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.
    In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.
    In case the two timestamps are identical, @timestamp should be used.
  name: event.created
  type: date
- description: |-
    This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.
    `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
    The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.
  name: event.kind
  type: keyword
- description: |-
    Raw text message of entire event. Used to demonstrate log integrity or where the full log message (before splitting it up in multiple parts) may be required, e.g. for reindex.
    This field is not indexed and doc_values are disabled. It cannot be searched, but it can be retrieved from `_source`. If users wish to override this and index this field, please see `Field data types` in the `Elasticsearch Reference`.
  doc_values: false
  index: false
  name: event.original
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.
    `event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.
    This field is an array. This will allow proper categorization of some events that fall in multiple event types.
  name: event.type
  normalize:
    - array
  type: keyword
- description: List of keywords used to tag each event.
  name: tags
  normalize:
    - array
  type: keyword
- description: Operating system architecture.
  name: host.architecture
  type: keyword
- description: |-
    Name of the domain of which the host is a member.
    For example, on Windows this could be the host's Active Directory domain or NetBIOS domain name. For Linux this could be the domain of the host's LDAP provider.
  name: host.domain
  type: keyword
- description: |-
    Hostname of the host.
    It normally contains what the `hostname` command returns on the host machine.
  name: host.hostname
  type: keyword
- description: |-
    Unique host id.
    As hostname is not always unique, use values that are meaningful in your environment.
    Example: The current usage of `beat.name`.
  name: host.id
  type: keyword
- description: Host ip addresses.
  name: host.ip
  normalize:
    - array
  type: ip
- description: |-
    Host MAC addresses.
    The notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.
  name: host.mac
  normalize:
    - array
  type: keyword
- description: |-
    Name of the host.
    It can contain what `hostname` returns on Unix systems, the fully qualified domain name, or a name specified by the user. The sender decides which value to use.
  name: host.name
  type: keyword
- description: OS family (such as redhat, debian, freebsd, windows).
  name: host.os.family
  type: keyword
- description: Operating system kernel version as a raw string.
  name: host.os.kernel
  type: keyword
- description: Operating system name, without the version.
  multi_fields:
    - name: text
      type: match_only_text
  name: host.os.name
  type: keyword
- description: Operating system platform (such centos, ubuntu, windows).
  name: host.os.platform
  type: keyword
- description: Operating system version as a raw string.
  name: host.os.version
  type: keyword
- description: |-
    Type of host.
    For Cloud providers this can be the machine type like `t2.medium`. If vm, this could be the container, for example, or other information meaningful in your environment.
  name: host.type
  type: keyword
- description: |-
    The cloud account or organization id used to identify different entities in a multi-tenant environment.
    Examples: AWS account id, Google Cloud ORG Id, or other unique identifier.
  name: cloud.account.id
  type: keyword
- description: |-
    The cloud account name or alias used to identify different entities in a multi-tenant environment.
    Examples: AWS account name, Google Cloud ORG display name.
  name: cloud.account.name
  type: keyword
- description: Availability zone in which this host, resource, or service is located.
  name: cloud.availability_zone
  type: keyword
- description: Instance ID of the host machine.
  name: cloud.instance.id
  type: keyword
- description: Instance name of the host machine.
  name: cloud.instance.name
  type: keyword
- description: Machine type of the host machine.
  name: cloud.machine.type
  type: keyword
- description: |-
    The cloud project identifier.
    Examples: Google Cloud Project id, Azure Project id.
  name: cloud.project.id
  type: keyword
- description: Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean.
  name: cloud.provider
  type: keyword
- description: Region in which this host, resource, or service is located.
  name: cloud.region
  type: keyword
- description: Unique container id.
  name: container.id
  type: keyword
- description: Name of the image the container was built on.
  name: container.image.name
  type: keyword
- description: Image labels.
  name: container.labels
  type: object
- description: Container name.
  name: container.name
  type: keyword
