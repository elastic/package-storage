---
description: Pipeline for ingesting APM application metrics.
processors:
  - grok:
      field: observer.version
      pattern_definitions:
        DIGITS: (?:[0-9]+)
      patterns:
        - '%{DIGITS:observer.version_major:int}.%{DIGITS:observer.version_minor:int}.%{DIGITS:observer.version_patch:int}(?:[-+].*)?'
  - fail:
      if: ctx.observer.version_major > 8 || (ctx.observer.version_major == 8 && ctx.observer.version_minor > 2)
      message: Document produced by APM Server v{{{observer.version}}}, which is newer than the installed APM integration (v8.2.1). The APM integration must be upgraded.
  - remove:
      field:
        - observer.version_major
        - observer.version_minor
        - observer.version_patch
      ignore_missing: true
  - user_agent:
      field: user_agent.original
      ignore_failure: true
      ignore_missing: true
      target_field: user_agent
  - geoip:
      database_file: GeoLite2-City.mmdb
      field: client.ip
      ignore_missing: true
      on_failure:
        - remove:
            field: client.ip
            ignore_failure: true
            ignore_missing: true
      target_field: client.geo
  - script:
      # TODO(axw) handle unit in metric descriptions.
      # See https://github.com/elastic/elasticsearch/issues/72536
      if: ctx._metric_descriptions != null
      source: |
        Map dynamic_templates = new HashMap();
        for (entry in ctx._metric_descriptions.entrySet()) {
          String name = entry.getKey();
          Map description = entry.getValue();
          String metric_type = description.type;
          if (metric_type == "histogram") {
            dynamic_templates[name] = "histogram";
          }
        }
        ctx._dynamic_templates = dynamic_templates;
        ctx.remove("_metric_descriptions");
