- description: |-
    ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
    When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
  name: ecs.version
  type: keyword
- description: |-
    Duration of the event in nanoseconds.
    If event.start and event.end are known this value should be the difference between the end and start time.
  name: event.duration
  type: long
- description: |-
    Address where data about this service was collected from.
    This should be a URI, network address (ipv4:port or [ipv6]:port) or a resource path (sockets).
  name: service.address
  type: keyword
- description: |-
    The type of the service data is collected from.
    The type can be used to group and correlate logs and metrics from one service type.
    Example: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`.
  name: service.type
  type: keyword
- description: |-
    Source fields capture details about the sender of a network exchange/packet. These fields are populated from a network event, packet, or other event containing details of a network transaction.
    Source fields are usually populated in conjunction with destination fields. The source and destination fields are considered the baseline and should always be filled if an event contains source and destination details from a network transaction. If the event also contains identification of the client and server roles, then the client and server fields should also be populated.
  fields:
    - description: |-
        Some event source addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.
        Then it should be duplicated to `.ip` or `.domain`, depending on which one it is.
      name: address
      type: keyword
    - description: Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.
      name: as.number
      type: long
    - description: Organization name.
      multi_fields:
        - name: text
          type: match_only_text
      name: as.organization.name
      type: keyword
    - description: Bytes sent from the source to the destination.
      name: bytes
      type: long
    - description: Source domain.
      name: domain
      type: keyword
    - description: City name.
      name: geo.city_name
      type: keyword
    - description: Two-letter code representing continent's name.
      name: geo.continent_code
      type: keyword
    - description: Name of the continent.
      name: geo.continent_name
      type: keyword
    - description: Country ISO code.
      name: geo.country_iso_code
      type: keyword
    - description: Country name.
      name: geo.country_name
      type: keyword
    - description: Longitude and latitude.
      name: geo.location
      type: geo_point
    - description: |-
        User-defined description of a location, at the level of granularity they care about.
        Could be the name of their data centers, the floor number, if this describes a local physical entity, city names.
        Not typically used in automated geolocation.
      name: geo.name
      type: keyword
    - description: |-
        Postal code associated with the location.
        Values appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.
      name: geo.postal_code
      type: keyword
    - description: Region ISO code.
      name: geo.region_iso_code
      type: keyword
    - description: Region name.
      name: geo.region_name
      type: keyword
    - description: The time zone of the location, such as IANA time zone name.
      name: geo.timezone
      type: keyword
    - description: IP address of the source (IPv4 or IPv6).
      name: ip
      type: ip
    - description: |-
        MAC address of the source.
        The notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.
      name: mac
      type: keyword
    - description: |-
        Translated ip of source based NAT sessions (e.g. internal client to internet)
        Typically connections traversing load balancers, firewalls, or routers.
      name: nat.ip
      type: ip
    - description: |-
        Translated port of source based NAT sessions. (e.g. internal client to internet)
        Typically used with load balancers, firewalls, or routers.
      name: nat.port
      type: long
    - description: Packets sent from the source to the destination.
      name: packets
      type: long
    - description: Port of the source.
      name: port
      type: long
    - description: |-
        The highest registered source domain, stripped of the subdomain.
        For example, the registered domain for "foo.example.com" is "example.com".
        This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".
      name: registered_domain
      type: keyword
    - description: |-
        The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.
        For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.
      name: subdomain
      type: keyword
    - description: |-
        The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".
        This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".
      name: top_level_domain
      type: keyword
    - description: |-
        Name of the directory the user is a member of.
        For example, an LDAP or Active Directory domain name.
      name: user.domain
      type: keyword
    - description: User email address.
      name: user.email
      type: keyword
    - description: User's full name, if available.
      multi_fields:
        - name: text
          type: match_only_text
      name: user.full_name
      type: keyword
    - description: |-
        Name of the directory the group is a member of.
        For example, an LDAP or Active Directory domain name.
      name: user.group.domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      name: user.group.id
      type: keyword
    - description: Name of the group.
      name: user.group.name
      type: keyword
    - description: |-
        Unique user hash to correlate information for a user in anonymized form.
        Useful if `user.id` or `user.name` contain confidential information and cannot be used.
      name: user.hash
      type: keyword
    - description: Unique identifier of the user.
      name: user.id
      type: keyword
    - description: Short name or login of the user.
      multi_fields:
        - name: text
          type: match_only_text
      name: user.name
      type: keyword
    - description: Array of user roles at the time of the event.
      name: user.roles
      type: keyword
  name: source
  type: group
- description: IP address of the source (IPv4 or IPv6).
  name: source.ip
  type: ip
- description: Port of the source.
  name: source.port
  type: long
