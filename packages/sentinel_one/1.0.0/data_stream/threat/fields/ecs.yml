- description: |-
    ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
    When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
  name: ecs.version
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.
    `event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.
    This field is an array. This will allow proper categorization of some events that fall in multiple categories.
  name: event.category
  type: keyword
- description: |-
    event.created contains the date/time when the event was first read by an agent, or by your pipeline.
    This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.
    In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.
    In case the two timestamps are identical, @timestamp should be used.
  name: event.created
  type: date
- description: |-
    This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.
    `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
    The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.
  name: event.kind
  type: keyword
- description: |-
    Raw text message of entire event. Used to demonstrate log integrity or where the full log message (before splitting it up in multiple parts) may be required, e.g. for reindex.
    This field is not indexed and doc_values are disabled. It cannot be searched, but it can be retrieved from `_source`. If users wish to override this and index this field, please see `Field data types` in the `Elasticsearch Reference`.
  doc_values: false
  index: false
  name: event.original
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.
    `event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.
    This field is an array. This will allow proper categorization of some events that fall in multiple event types.
  name: event.type
  type: keyword
- description: City name.
  name: host.geo.city_name
  type: keyword
- description: Name of the continent.
  name: host.geo.continent_name
  type: keyword
- description: Country ISO code.
  name: host.geo.country_iso_code
  type: keyword
- description: Country name.
  name: host.geo.country_name
  type: keyword
- description: Longitude and latitude.
  name: host.geo.location
  type: geo_point
- description: Region ISO code.
  name: host.geo.region_iso_code
  type: keyword
- description: Region name.
  name: host.geo.region_name
  type: keyword
- description: |-
    Use the `os.type` field to categorize the operating system into one of the broad commercial families.
    One of these following values should be used (lowercase): linux, macos, unix, windows.
    If the OS you're dealing with is not in the list, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition.
  name: host.os.type
  type: keyword
- description: |-
    For log events the message field contains the log message, optimized for viewing in a log viewer.
    For structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.
    If multiple messages exist, they can be combined into one message.
  name: message
  type: match_only_text
- description: Observer version.
  name: observer.version
  type: keyword
- description: All the hashes seen on your event. Populating this field, then using it to search for hashes can help in situations where you're unsure what the hash algorithm is (and therefore which key name to search).
  name: related.hash
  type: keyword
- description: All hostnames or other host identifiers seen on your event. Example identifiers include FQDNs, domain names, workstation names, or aliases.
  name: related.hosts
  type: keyword
- description: All of the IPs seen on your event.
  name: related.ip
  type: ip
- description: All the user names or other user identifiers seen on the event.
  name: related.user
  type: keyword
- description: List of keywords used to tag each event.
  name: tags
  type: keyword
- description: Name of the threat framework used to further categorize and classify the tactic and technique of the reported threat. Framework classification can be provided by detecting systems, evaluated at ingest time, or retrospectively tagged to events.
  name: threat.framework
  type: keyword
- description: |-
    File extension, excluding the leading dot.
    Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").
  name: threat.indicator.file.extension
  type: keyword
- description: MD5 hash.
  name: threat.indicator.file.hash.md5
  type: keyword
- description: SHA1 hash.
  name: threat.indicator.file.hash.sha1
  type: keyword
- description: SHA256 hash.
  name: threat.indicator.file.hash.sha256
  type: keyword
- description: Full path to the file, including the file name. It should include the drive letter, when appropriate.
  multi_fields:
    - name: text
      type: match_only_text
  name: threat.indicator.file.path
  type: keyword
- description: |-
    File size in bytes.
    Only relevant when `file.type` is "file".
  name: threat.indicator.file.size
  type: long
- description: The id of tactic used by this threat. You can use a MITRE ATT&CK速 tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )
  name: threat.tactic.id
  type: keyword
- description: Name of the type of tactic used by this threat. You can use a MITRE ATT&CK速 tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/)
  name: threat.tactic.name
  type: keyword
- description: The id of technique used by this threat. You can use a MITRE ATT&CK速 technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
  name: threat.technique.id
  type: keyword
- description: The reference url of technique used by this threat. You can use a MITRE ATT&CK速 technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)
  name: threat.technique.reference
  type: keyword
- description: User email address.
  name: user.email
  type: keyword
- description: Short name or login of the user.
  multi_fields:
    - name: text
      type: match_only_text
  name: user.name
  type: keyword
