- description: IP address of the destination (IPv4 or IPv6).
  name: destination.ip
  type: ip
- description: Port of the destination.
  name: destination.port
  type: long
- description: SHA1 hash.
  name: dll.hash.sha1
  type: keyword
- description: Full file path of the library.
  name: dll.path
  type: keyword
- description: |-
    The name being queried.
    If the name field contains non-printable characters (below 32 or above 126), those characters should be represented as escaped base 10 integers (\DDD). Back slashes and quotes should be escaped. Tabs, carriage returns, and line feeds should be converted to \t, \r, and \n respectively.
  name: dns.question.name
  type: keyword
- description: |-
    ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
    When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
  name: ecs.version
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.
    `event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.
    This field is an array. This will allow proper categorization of some events that fall in multiple categories.
  name: event.category
  type: keyword
- description: |-
    event.created contains the date/time when the event was first read by an agent, or by your pipeline.
    This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.
    In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.
    In case the two timestamps are identical, @timestamp should be used.
  name: event.created
  type: date
- description: Unique ID to describe the event.
  name: event.id
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.
    `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
    The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.
  name: event.kind
  type: keyword
- description: |-
    Raw text message of entire event. Used to demonstrate log integrity or where the full log message (before splitting it up in multiple parts) may be required, e.g. for reindex.
    This field is not indexed and doc_values are disabled. It cannot be searched, but it can be retrieved from `_source`. If users wish to override this and index this field, please see `Field data types` in the `Elasticsearch Reference`.
  doc_values: false
  index: false
  name: event.original
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.
    `event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.
    This field is an array. This will allow proper categorization of some events that fall in multiple event types.
  name: event.type
  type: keyword
- description: |-
    File creation time.
    Note that not all filesystems store the creation time.
  name: file.created
  type: date
- description: Last time the file content was modified.
  name: file.mtime
  type: date
- description: |-
    Direction of the network traffic.
    When mapping events from a host-based monitoring context, populate this field from the host's point of view, using the values "ingress" or "egress".
    When mapping events from a network or perimeter-based monitoring context, populate this field from the point of view of the network perimeter, using the values "inbound", "outbound", "internal" or "external".
    Note that "internal" is not crossing perimeter boundaries, and is meant to describe communication between two hosts within the perimeter. Note also that "external" is meant to describe traffic between two hosts that are external to the perimeter. This could for example be useful for ISPs or VPN service providers.
  name: network.direction
  type: keyword
- description: Observer serial number.
  name: observer.serial_number
  type: keyword
- description: Observer version.
  name: observer.version
  type: keyword
- description: Name of the cluster.
  name: orchestrator.cluster.name
  type: keyword
- description: Namespace in which the action is taking place.
  name: orchestrator.namespace
  type: keyword
- description: Operating system name, without the version.
  multi_fields:
    - name: text
      type: match_only_text
  name: os.name
  type: keyword
- description: |-
    The identifier used to sign the process.
    This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.
  name: process.code_signature.signing_id
  type: keyword
- description: |-
    Full command line that started the process, including the absolute path to the executable, and all arguments.
    Some arguments may be filtered to protect sensitive information.
  multi_fields:
    - name: text
      type: match_only_text
  name: process.command_line
  type: wildcard
- description: |-
    Unique identifier for the process.
    The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
    Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
  name: process.entity_id
  type: keyword
- description: Absolute path to the process executable.
  multi_fields:
    - name: text
      type: match_only_text
  name: process.executable
  type: keyword
- description: MD5 hash.
  name: process.hash.md5
  type: keyword
- description: SHA1 hash.
  name: process.hash.sha1
  type: keyword
- description: SHA256 hash.
  name: process.hash.sha256
  type: keyword
- description: |-
    Process name.
    Sometimes called program name or similar.
  multi_fields:
    - name: text
      type: match_only_text
  name: process.name
  type: keyword
- description: |-
    The identifier used to sign the process.
    This is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.
  name: process.parent.code_signature.signing_id
  type: keyword
- description: |-
    Full command line that started the process, including the absolute path to the executable, and all arguments.
    Some arguments may be filtered to protect sensitive information.
  multi_fields:
    - name: text
      type: match_only_text
  name: process.parent.command_line
  type: wildcard
- description: |-
    Unique identifier for the process.
    The implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.
    Constructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.
  name: process.parent.entity_id
  type: keyword
- description: Absolute path to the process executable.
  multi_fields:
    - name: text
      type: match_only_text
  name: process.parent.executable
  type: keyword
- description: MD5 hash.
  name: process.parent.hash.md5
  type: keyword
- description: SHA1 hash.
  name: process.parent.hash.sha1
  type: keyword
- description: SHA256 hash.
  name: process.parent.hash.sha256
  type: keyword
- description: |-
    Process name.
    Sometimes called program name or similar.
  multi_fields:
    - name: text
      type: match_only_text
  name: process.parent.name
  type: keyword
- description: Process id.
  name: process.parent.pid
  type: long
- description: The time the process started.
  name: process.parent.start
  type: date
- description: Short name or login of the user.
  multi_fields:
    - name: text
      type: match_only_text
  name: process.parent.user.name
  type: keyword
- description: Process id.
  name: process.pid
  type: long
- description: The time the process started.
  name: process.start
  type: date
- description: Short name or login of the user.
  multi_fields:
    - name: text
      type: match_only_text
  name: process.user.name
  type: keyword
- description: Hive-relative path of keys.
  name: registry.key
  type: keyword
- description: Full path, including hive, key and value
  name: registry.path
  type: keyword
- description: Name of the value written.
  name: registry.value
  type: keyword
- description: All the hashes seen on your event. Populating this field, then using it to search for hashes can help in situations where you're unsure what the hash algorithm is (and therefore which key name to search).
  name: related.hash
  type: keyword
- description: All hostnames or other host identifiers seen on your event. Example identifiers include FQDNs, domain names, workstation names, or aliases.
  name: related.hosts
  type: keyword
- description: All of the IPs seen on your event.
  name: related.ip
  type: ip
- description: All the user names or other user identifiers seen on the event.
  name: related.user
  type: keyword
- description: A categorization value keyword used by the entity using the rule for detection of this event.
  name: rule.category
  type: keyword
- description: The description of the rule generating the event.
  name: rule.description
  type: keyword
- description: A rule ID that is unique within the scope of an agent, observer, or other entity using the rule for detection of this event.
  name: rule.id
  type: keyword
- description: The name of the rule or signature generating the event.
  name: rule.name
  type: keyword
- description: IP address of the source (IPv4 or IPv6).
  name: source.ip
  type: ip
- description: Port of the source.
  name: source.port
  type: long
- description: List of keywords used to tag each event.
  name: tags
  type: keyword
- description: |-
    Name of the directory the user is a member of.
    For example, an LDAP or Active Directory domain name.
  name: user.domain
  type: keyword
- description: Short name or login of the user.
  multi_fields:
    - name: text
      type: match_only_text
  name: user.name
  type: keyword
