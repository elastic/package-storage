- description: |-
    Date/time when the event originated.
    This is the date/time extracted from the event, typically representing when the event was generated by the source.
    If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.
    Required field for all events.
  name: '@timestamp'
  type: date
- description: |-
    ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
    When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
  name: ecs.version
  type: keyword
- description: |-
    Name of the dataset.
    If an event source publishes more than one type of log or events (e.g. access log, error log), the dataset is used to specify which one the event comes from.
    It's recommended but not required to start the dataset name with the module name, followed by a dot, then the dataset name.
  name: event.dataset
  type: keyword
- description: |-
    Duration of the event in nanoseconds.
    If event.start and event.end are known this value should be the difference between the end and start time.
  name: event.duration
  type: long
- description: |-
    Name of the module this data is coming from.
    If your monitoring agent supports the concept of modules or plugins to process events of a given source (e.g. Apache logs), `event.module` should contain the name of this module.
  name: event.module
  type: keyword
- description: |-
    Name of the host.
    It can contain what `hostname` returns on Unix systems, the fully qualified domain name, or a name specified by the user. The sender decides which value to use.
  name: host.name
  type: keyword
- description: Service address
  name: service.address
  type: keyword
- description: |-
    The type of the service data is collected from.
    The type can be used to group and correlate logs and metrics from one service type.
    Example: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`.
  name: service.type
  type: keyword
- description: |-
    Name of the service data is collected from.
    The name of the service is normally user given. This allows for distributed services that run on multiple hosts to correlate the related instances based on the name.
    In the case of Elasticsearch the `service.name` could contain the cluster name. For Beats the `service.name` is by default a copy of the `service.type` field if no name is specified.
  name: service.name
  type: keyword
- description: Error message.
  name: error.message
  type: match_only_text
