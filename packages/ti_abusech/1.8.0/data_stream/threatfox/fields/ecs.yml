- description: |-
    ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.
    When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.
  name: ecs.version
  type: keyword
- description: |-
    For log events the message field contains the log message, optimized for viewing in a log viewer.
    For structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.
    If multiple messages exist, they can be combined into one message.
  name: message
  type: match_only_text
- description: Error message.
  name: error.message
  type: match_only_text
- description: List of keywords used to tag each event.
  name: tags
  normalize:
    - array
  type: keyword
- description: All the hashes seen on your event. Populating this field, then using it to search for hashes can help in situations where you're unsure what the hash algorithm is (and therefore which key name to search).
  name: related.hash
  normalize:
    - array
  type: keyword
- description: |-
    Timestamp when an event arrived in the central data store.
    This is different from `@timestamp`, which is when the event originally occurred.  It's also different from `event.created`, which is meant to capture the first time an agent saw the event.
    In normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.
  name: event.ingested
  type: date
- description: |-
    This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.
    `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.
    The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.
  name: event.kind
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.
    `event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.
    This field is an array. This will allow proper categorization of some events that fall in multiple categories.
  name: event.category
  normalize:
    - array
  type: keyword
- description: |-
    This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.
    `event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.
    This field is an array. This will allow proper categorization of some events that fall in multiple event types.
  name: event.type
  normalize:
    - array
  type: keyword
- description: |-
    Raw text message of entire event. Used to demonstrate log integrity or where the full log message (before splitting it up in multiple parts) may be required, e.g. for reindex.
    This field is not indexed and doc_values are disabled. It cannot be searched, but it can be retrieved from `_source`. If users wish to override this and index this field, please see `Field data types` in the `Elasticsearch Reference`.
  doc_values: false
  index: false
  name: event.original
  type: keyword
- description: Type of indicator as represented by Cyber Observable in STIX 2.0.
  name: threat.indicator.type
  type: keyword
- description: |-
    event.created contains the date/time when the event was first read by an agent, or by your pipeline.
    This field is distinct from @timestamp in that @timestamp typically contain the time extracted from the original event.
    In most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.
    In case the two timestamps are identical, @timestamp should be used.
  name: event.created
  type: date
- description: The date and time when intelligence source first reported sighting this indicator.
  name: threat.indicator.first_seen
  type: date
- description: The date and time when intelligence source last reported sighting this indicator.
  name: threat.indicator.last_seen
  type: date
- description: |-
    File size in bytes.
    Only relevant when `file.type` is "file".
  name: threat.indicator.file.size
  type: long
- description: File type (file, dir, or symlink).
  name: threat.indicator.file.type
  type: keyword
- description: Name of the file including the extension, without the directory.
  name: threat.indicator.file.name
  type: keyword
- description: |-
    File extension, excluding the leading dot.
    Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").
  name: threat.indicator.file.extension
  type: keyword
- description: SHA1 hash.
  name: threat.indicator.file.hash.sha1
  type: keyword
- description: MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.
  name: threat.indicator.file.mime_type
  type: keyword
- description: |-
    The alias(es) of the software for a set of related intrusion activity that are tracked by a common name in the security community.
    While not required, you can use a MITRE ATT&CK® associated software description.
  name: threat.software.alias
  normalize:
    - array
  type: keyword
- description: MD5 hash.
  name: threat.indicator.file.hash.md5
  type: keyword
- description: SHA256 hash.
  name: threat.indicator.file.hash.sha256
  type: keyword
- description: SSDEEP hash.
  name: threat.indicator.file.hash.ssdeep
  type: keyword
- description: SHA384 hash.
  name: threat.indicator.file.hash.sha384
  type: keyword
- description: TLSH hash.
  name: threat.indicator.file.hash.tlsh
  type: keyword
- description: |-
    A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.
    Learn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.
  name: threat.indicator.file.pe.imphash
  type: keyword
- description: telfhash symbol hash for ELF file.
  name: threat.indicator.file.elf.telfhash
  type: keyword
- description: The name of the indicator's provider.
  name: threat.indicator.provider
  type: keyword
- description: Identifies a threat indicator as a port number (irrespective of direction).
  name: threat.indicator.port
  type: long
- description: Identifies a threat indicator as an IP address (irrespective of direction).
  name: threat.indicator.ip
  type: ip
- description: Identifies the vendor-neutral confidence rating using the None/Low/Medium/High scale defined in Appendix A of the STIX 2.1 framework. Vendor-specific confidence scales may be added as custom fields.
  name: threat.indicator.confidence
  type: keyword
- description: Describes the type of action conducted by the threat.
  name: threat.indicator.description
  type: keyword
- description: Reference URL linking to additional information about this indicator.
  name: threat.indicator.reference
  type: keyword
- description: |-
    Domain of the url, such as "www.elastic.co".
    In some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.
    If the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field.
  name: threat.indicator.url.domain
  type: keyword
- description: |-
    The field contains the file extension from the original request url, excluding the leading dot.
    The file extension is only set if it exists, as not every url has a file extension.
    The leading period must not be included. For example, the value must be "png", not ".png".
    Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").
  name: threat.indicator.url.extension
  type: keyword
- description: |-
    Unmodified original url as seen in the event source.
    Note that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.
    This field is meant to represent the URL as it was observed, complete or not.
  multi_fields:
    - name: text
      type: match_only_text
  name: threat.indicator.url.original
  type: wildcard
- description: Path of the request, such as "/search".
  name: threat.indicator.url.path
  type: wildcard
- description: Port of the request, such as 443.
  name: threat.indicator.url.port
  type: long
- description: |-
    Scheme of the request, such as "https".
    Note: The `:` is not part of the scheme.
  name: threat.indicator.url.scheme
  type: keyword
- description: |-
    The name of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.
    While not required, you can use a MITRE ATT&CK® software name.
  name: threat.software.name
  type: keyword
- description: |-
    The reference URL of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.
    While not required, you can use a MITRE ATT&CK® software reference URL.
  name: threat.software.reference
  type: keyword
